/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/BackupMan.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/BackupMan.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group scale={2.174}>
        <primitive object={nodes.spine} />
        <primitive object={nodes.neutral_bone} />
        <skinnedMesh geometry={nodes.Cube048.geometry} material={materials['Material.005']} skeleton={nodes.Cube048.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_1.geometry} material={materials['Material.007']} skeleton={nodes.Cube048_1.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_2.geometry} material={materials['Material.008']} skeleton={nodes.Cube048_2.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_3.geometry} material={materials['Material.001']} skeleton={nodes.Cube048_3.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_4.geometry} material={materials['Material.003']} skeleton={nodes.Cube048_4.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_5.geometry} material={materials['Material.002']} skeleton={nodes.Cube048_5.skeleton} />
        <skinnedMesh geometry={nodes.Cube048_6.geometry} material={materials['Material.004']} skeleton={nodes.Cube048_6.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/BackupMan.glb')
