/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/BackupMan.glb 
*/

import React, { useEffect, useRef } from "react";
import { useGraph } from '@react-three/fiber'
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";
import { SkeletonUtils } from 'three-stdlib'


export function Avatar(props) {
  const group = useRef();
  const { scene } = useGLTF('models/man_test1.glb');
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone);

  const {animations: typingAnimation} = useFBX("animations/Typing_1.fbx");  
  console.log(typingAnimation);

  typingAnimation[0].name = "Typing";

  const { actions } = useAnimations(typingAnimation, group);

  useEffect(() => {
    actions["Typing"].reset().play()
  }, []);

  return (
    <group {...props} ref={group} dispose={null}>
      <group scale={2.174}>
        <primitive object={nodes.spine} />
        <skinnedMesh geometry={nodes.Cube061.geometry} material={materials['Material.010']} skeleton={nodes.Cube061.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_1.geometry} material={materials['Material.013']} skeleton={nodes.Cube061_1.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_2.geometry} material={materials['Material.006']} skeleton={nodes.Cube061_2.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_3.geometry} material={materials['Material.009']} skeleton={nodes.Cube061_3.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_4.geometry} material={materials['Material.011']} skeleton={nodes.Cube061_4.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_5.geometry} material={materials['Material.012']} skeleton={nodes.Cube061_5.skeleton} />
        <skinnedMesh geometry={nodes.Cube061_6.geometry} material={materials['Material.004']} skeleton={nodes.Cube061_6.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('models/man_test1.glb')